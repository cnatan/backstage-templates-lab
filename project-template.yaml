apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: project-demo
  title: "[Platform] Project"
  description: Create a new sre-platform's project
  tags:
    - recommended
    - platform-core
    - test-92
spec:
  owner: team-a
  type: platform-core

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Name & Ownership
      required:
        - name
        - owner
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the project
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Owner team of the project
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Google Cloud Integration
      required:
        - gcpNonProd
        - gcpProd
      properties:
        gcpNonProd:
          title: GCP NonProd Project ID
          type: string
          description: The ID of the non-production Google Cloud project
          ui:options:
            rows: 5
        gcpProd:
          title: GCP Prod Project ID
          type: string
          description: The ID of the production Google Cloud project
          ui:options:
            rows: 5
    - title: Azure Devops Integration
      properties:
        azdevopsIntegrationType:
          title: Azure Devops integration type
          type: string
          description: The type of the link between the Platform project and the Azure Devops project
          enum: ["Use a existent project", "Create a new project"]
          default: "Create a new project"
      dependencies:
        azdevopsIntegrationType:
          oneOf:
            - properties:
                azdevopsIntegrationType:
                  enum: ["Use a existent project"]
                azdevopsProject:
                  title: Azure Devops project
                  type: string
                  description: The name of an existing AzureDevOps Project to linked to the Platform Project
                  ui:options:
                    rows: 5
                  # ui:widget:
                  #   hidden: ${{ parameters.azdevopsIntegrationType }}
              required: ["azdevopsProject"]
            - properties:
                azdevopsIntegrationType:
                  enum: ["Create a new project"]
                azdevopsProjectProcess:
                  title: Azure Devops project process
                  type: string
                  description: The name of process to be used in the new AzureDevOps Project to be created
                  enum: ["CMMI", "agile", "scrum", "basic", "kanban"]
              required: ["azdevopsProjectProcess"]
      # dependencies:
      #   azdevopsIntegrationType: ["azdevopsProject"]

  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: create-project
      name: Create Platform Project
      action: sre-platform:create-project
      input:
        name: ${{ parameters.name }}
        gcpNonProd: ${{ parameters.gcpNonProd }}
        azdevopsProject: ${{ parameters.azdevopsProject }}
        azdevopsProcess: ${{ parameters.azdevopsProjectProcess }}
  output:
    entityRef: "system:default/cnatan-lab-68"
    links:
      - url: ${{ steps.create-project.output.url }}
        icon: catalog
        title: View System
    # - id: fetch-base
    #   name: Fetch Base
    #   action: fetch:template
    #   input:
    #     url: ./template
    #     values:
    #       name: ${{ parameters.name }}
    #       owner: ${{ parameters.owner }}

    # - id: fetch-docs
    #   name: Fetch Docs
    #   action: fetch:plain
    #   input:
    #     targetPath: ./community
    #     url: https://github.com/backstage/community/tree/main/backstage-community-sessions

    # - id: publish
    #   name: Publish
    #   action: publish:github
    #   input:
    #     allowedHosts: ['github.com']
    #     description: This is ${{ parameters.name }}
    #     repoUrl: ${{ parameters.repoUrl }}

    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
    #     catalogInfoPath: '/catalog-info.yaml'
